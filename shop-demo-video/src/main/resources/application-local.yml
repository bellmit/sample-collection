server:
  port: 9090

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/mall?characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 10
      test-on-borrow: true
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
  redis:
    # Redis 服务器地址
    host: localhost
    # Redis 数据库索引，默认为0
    database: 0
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间（毫秒）
    timeout: 3000ms
    # lettuce 和 jedis 的区别：
    # jedis ==》 如果在多线程环境下是非线程安全的，这个时候只有使用连接池，为每个Jedis实例增加物理连接
    # lettuce ==》 lettuce 在多线程环境下也是线程安全的，所以一个连接实例就可以满足多线程环境下
    # 的并发访问，当然一个实例不够的情况下也可以增加多个连接实例
    jedis: # 或 jedis SpringBoot默认是 lettuce
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
        # 超时关闭时间
      shutdown-timeout: 100ms

# Mybatis-plus
mybatis-plus:
  # 放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath:/mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.onnoa.shop.demo.comment.domain
  global-config:
    # 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    # 字段策略 0:"忽略判断",1:"非 NULL 判断",2:"非空判断"
    field-strategy: 1
    # 驼峰下划线转换
    db-column-underline: true
    # 刷新mapper 调试神器
    refresh-mapper: true
    # 数据库大写下划线转换
    #capital-mode: true
    # 逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

#视频流
shop:
  ffmpegPath: D:\IDEATools\开发工具\Java开发工具\ffmpeg-20200303-60b1f85-win64-static\ffmpeg-20200303-60b1f85-win64-static\bin\ffmpeg.exe #视频处理工具
  ffprobePath: D:\IDEATools\开发工具\Java开发工具\ffmpeg-20200303-60b1f85-win64-static\ffmpeg-20200303-60b1f85-win64-static\bin\ffprobe.exe #读取视频工具
  screenShotPath: /data/videostream/tmpfiles/img/   #缓存视频封面截图处理的中间临时图片文件（需要定时清理）
  transcodeOutputPath: /data/videostream/tmpfiles/mv/  #缓存视频转码输出的临时视频文件（需要定时清理）
  fileMaxSize: 209715200 #最大可上传为200M
    speed: faster  #调节编码速度 从左到右 从快到慢 ultrafast、superfast、veryfast、faster、fast、medium、slow、slower编码加快，意味着信息丢失越严重，输出图像质量越差。
  #视频时长要求,限制生成gif小于该值则抛异常
  duration : 3
  #配置截图格式
  screenshotFormat:
    #帧数
    frames: 10
    #最大分辨率宽度
    maxWidth: 1080
    #默认截取GIF图片时 视频中的开始时间 (例如截取当前视频 第一秒开始的gif图 00:00:01)
    gifStartTime: 00:00:01
    #默认截GIF图的时长 (例如 3 的话 代表从开始时间截取3秒 00:00:1 到00:00:4
    burningTime: 2
    #默认截取jpg图片 视频中开始时间
    jpgStartTime: 00:00:03
    #截图质量比
    resultRate: 5

  #配置图片处理的宽度,可配置多个, 比如 定300 则生成的图片url 会是300的宽度 高度根据原图自适应,
  pic-width:
    small: 335 #小规格
    medium: 750 #中规格
    advanced: 1080 #高规格


#ftp
ftp:
  ftpPrefixPath: /data/videostrm/ftp/vod/ #ftp服务器存储路径前缀
  ftpHost: 192.168.118.131 #ftp服务器IP
  ftpPort: 21 #ftp服务器端口
  ftpUserName: onnoa #ftp服务器登录账号
  ftpPassword: 123456 #ftp服务器登录密码
  localPrefixPath: /data/videostream/tmpfiles/mv/  #处理时从FTP下载源视频文件到时该路径存储然后处理（需要定时清理）
  interval: 900 #从ftp下载文件的间隔时间 单位是秒
  playUrl: http://192.168.118.131/videostream/vod/ #视频播放部分路径





